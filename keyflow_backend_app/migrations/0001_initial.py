# Generated by Django 4.2.4 on 2024-08-02 03:06

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import keyflow_backend_app.models.uploaded_file


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('authtoken', '0003_tokenproxy'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=100)),
                ('account_type', models.CharField(choices=[('owner', 'Owner'), ('tenant', 'Tenant'), ('staff', 'Staff')], max_length=10)),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('updated_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BillingEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('type', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('due_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('stripe_invoice_id', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('updated_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
            ],
            options={
                'db_table': 'billing_entries',
            },
        ),
        migrations.CreateModel(
            name='ExpiringToken',
            fields=[
                ('token_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='authtoken.token')),
                ('expiration_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'expiring_tokens',
            },
            bases=('authtoken.token',),
        ),
        migrations.CreateModel(
            name='LeaseAgreement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('document_id', models.CharField(blank=True, max_length=100, null=True)),
                ('signed_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(blank=True, default=False, null=True)),
                ('is_tenant_invite', models.BooleanField(blank=True, default=False, null=True)),
                ('approval_hash', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('stripe_subscription_id', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('auto_pay_is_enabled', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('updated_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
            ],
            options={
                'db_table': 'lease_agreements',
            },
        ),
        migrations.CreateModel(
            name='LeaseTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rent', models.DecimalField(decimal_places=2, max_digits=10)),
                ('rent_frequency', models.CharField(default='', max_length=100)),
                ('term', models.IntegerField()),
                ('template_id', models.CharField(default='', max_length=100)),
                ('description', models.TextField()),
                ('late_fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('security_deposit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('gas_included', models.BooleanField(default=False)),
                ('water_included', models.BooleanField(default=False)),
                ('electric_included', models.BooleanField(default=False)),
                ('repairs_included', models.BooleanField(default=False)),
                ('additional_charges', models.TextField(blank=True, default='[]', null=True)),
                ('grace_period', models.IntegerField(default=0)),
                ('lease_cancellation_notice_period', models.IntegerField()),
                ('lease_cancellation_fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('lease_renewal_notice_period', models.IntegerField(default=None, null=True)),
                ('lease_renewal_fee', models.DecimalField(decimal_places=2, default=None, max_digits=10, null=True)),
                ('stripe_product_id', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('stripe_price_id', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('updated_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
            ],
            options={
                'db_table': 'lease_templates',
            },
        ),
        migrations.CreateModel(
            name='MaintenanceRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.IntegerField(default=1)),
                ('type', models.CharField(choices=[('plumbing', 'Plumbling'), ('electrical', 'Electrical'), ('appliance', 'Appliance'), ('structural', 'Structural'), ('hvac', 'HVAC'), ('other', 'Other')], max_length=35)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed')], default='pending', max_length=50)),
                ('is_archived', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('updated_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('billing_entry', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='keyflow_backend_app.billingentry')),
            ],
            options={
                'db_table': 'maintenance_requests',
            },
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_account_id', models.CharField(blank=True, max_length=100, null=True)),
                ('stripe_customer_id', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('stripe_subscription_id', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('date_joined', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('preferences', models.TextField(blank=True, default='\n[\n    {\n        "type": "notifications",\n        "hidden": false,\n        "name": "tenant_lease_agreement_signed",\n        "label": "Tenant Lease Agreement Signed",\n        "values": [\n            {"name": "push", "value": true, "inputType":"switch", "label": "Push Notifications"},\n            {"name": "email", "value": true, "inputType":"switch", "label": "Email Notifications"}\n        ],\n        "description": "Enable  or disable notifications for when a tenant signs a lease agreement"\n    },\n    {\n        "type": "notifications",\n        "hidden": false,\n        "name": "lease_cancellation_request_created",\n        "label": "Lease Cancellation Request Created",\n        "values": [\n            {"name": "push", "value": true, "inputType":"switch", "label": "Push Notifications"},\n            {"name": "email", "value": true, "inputType":"switch", "label": "Email Notifications"}\n        ],\n        "description": "Enable  or disable notifications for when a tenant creates a lease cancellation request"\n    },\n    {\n        "type": "notifications",\n        "hidden": false,\n        "name": "lease_renewal_request_created",\n        "label": "Lease Renewal Request Created",\n        "values": [\n            {"name": "push", "value": true, "inputType":"switch", "label": "Push Notifications"},\n            {"name": "email", "value": true, "inputType":"switch", "label": "Email Notifications"}\n        ],\n        "description": "Enable  or disable notifications for when a tenant creates a lease renewal request"\n    },\n    {\n        "type": "notifications",\n        "hidden": false,\n        "name": "lease_renewal_agreement_signed",\n        "label": "Lease Renewal Agreement Signed",\n        "values": [\n            {"name": "push", "value": true, "inputType":"switch", "label": "Push Notifications"},\n            {"name": "email", "value": true, "inputType":"switch", "label": "Email Notifications"}\n        ],\n        "description": "Enable  or disable notifications for when a tenant signs a lease renewal agreement"\n    },\n    {\n        "type": "notifications",\n        "hidden": false,\n        "name": "rental_application_created",\n        "label": "Rental Application Created",\n        "values": [\n            {"name": "push", "value": true, "inputType":"switch", "label": "Push Notifications"},\n            {"name": "email", "value": true, "inputType":"switch", "label": "Email Notifications"}\n        ],\n        "description": "Enable  or disable notifications for when a tenant creates a rental application"\n    },\n    {\n        "type": "notifications",\n        "hidden": false,\n        "name": "invoice_paid",\n        "label": "Invoice Paid",\n        "values": [\n            {"name": "push", "value": true, "inputType":"switch", "label": "Push Notifications"},\n            {"name": "email", "value": true, "inputType":"switch", "label": "Email Notifications"}\n        ],\n        "description": "Enable  or disable notifications for when a tenant pays an invoice"\n    },\n    {\n        "type": "notifications",\n        "hidden": false,\n        "name": "new_tenant_registration_complete",\n        "label": "New Tenant Registration Complete",\n        "values": [\n            {"name": "push", "value": true, "inputType":"switch", "label": "Push Notifications"},\n            {"name": "email", "value": true, "inputType":"switch", "label": "Email Notifications"}\n        ],\n        "description": "Enable  or disable notifications for when a new tenant completes registration"\n    },\n    {\n        "type": "notifications",\n        "hidden": false,\n        "label": "Message Received",\n        "name": "message_received",\n        "values": [\n            {"name": "push", "value": true, "inputType":"switch", "label": "Push Notifications"},\n            {"name": "email", "value": true, "inputType":"switch", "label": "Email Notifications"}\n        ],\n        "description": "Enable or disable notifications for when you receive a message"\n    }\n]\n', null=True)),
                ('user', models.OneToOneField(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'owners',
            },
        ),
        migrations.CreateModel(
            name='PasswordResetToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('token', models.CharField(blank=True, default=None, max_length=100, null=True, unique=True)),
                ('expires_at', models.DateTimeField(default=datetime.datetime.now)),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('updated_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
            ],
            options={
                'db_table': 'password_reset_tokens',
            },
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100)),
                ('description', models.TextField(blank=True)),
                ('preferences', models.TextField(blank=True, default='\n    [\n        {\n            "type": "portfolio_preferences",\n            "hidden": false,\n            "label": "Accept Rental Applications",\n            "name": "accept_rental_applications",\n            "inputType": "switch",\n            "value": true,\n            "description": "Indicates if the owner is accepting rental applications for this portfolio"\n        },\n        {\n            "type": "portfolio_preferences",\n            "hidden": false,\n            "label": "Acccept Lease Renewals",\n            "name": "accept_lease_renewals",\n            "inputType": "switch",\n            "value": true,\n            "description": "Indicates if the owner is accepting lease renewals for this portfolio"\n        },\n        {\n            "type": "portfolio_preferences",\n            "hidden": false,\n            "label": "Accept Lease Cancellations",\n            "name": "accept_lease_cancellations",\n            "inputType": "switch",\n            "value": true,\n            "description": "Indicates if the owner is accepting lease cancellations for this portfolio"\n        },\n        {\n            "type": "unit_preferences",\n            "hidden": false,\n            "label": "Allow Lease Auto Renewal",\n            "name": "allow_lease_auto_renewal",\n            "inputType": "switch",\n            "value": true,\n            "description": "Indicates if the owner is allowing tenants in subsequent units to enable auto renewal of their lease"\n        }\n    ]\n    ', null=True)),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('updated_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('lease_template', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='portfolios', to='keyflow_backend_app.leasetemplate')),
                ('owner', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='keyflow_backend_app.owner')),
            ],
            options={
                'db_table': 'portfolios',
            },
        ),
        migrations.CreateModel(
            name='RentalProperty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=None, max_length=100)),
                ('street', models.TextField()),
                ('city', models.CharField(blank=True, max_length=100)),
                ('state', models.CharField(blank=True, max_length=100)),
                ('zip_code', models.CharField(blank=True, null=True)),
                ('country', models.CharField(blank=True, default='United States', max_length=100, null=True)),
                ('preferences', models.TextField(blank=True, default='\n[\n    {\n        "type": "property_preferences",\n        "hidden": false,\n        "label": "Accept Rental Applications",\n        "name": "accept_rental_applications",\n        "inputType": "switch",\n        "value": true,\n        "description": "Indicates if the owner is accepting rental applications for this property"\n    },\n    {\n        "type": "property_preferences",\n        "hidden": false,\n        "label": "Acccept Lease Renewals",\n        "name": "accept_lease_renewals",\n        "inputType": "switch",\n        "value": true,\n        "description": "Indicates if the owner is accepting lease renewals for this property"\n    },\n    {\n        "type": "property_preferences",\n        "hidden": false,\n        "label": "Accept Lease Cancellations",\n        "name": "accept_lease_cancellations",\n        "inputType": "switch",\n        "value": true,\n        "description": "Indicates if the owner is accepting lease cancellations for this property"\n    },\n    {\n        "type": "unit_preferences",\n        "hidden": false,\n        "label": "Allow Lease Auto Renewal",\n        "name": "allow_lease_auto_renewal",\n        "inputType": "switch",\n        "value": true,\n        "description": "Indicates if the owner is allowing tenants in subsequent units to enable auto renewal of their lease"\n    }\n]\n', null=True)),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('updated_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('lease_template', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rental_properties', to='keyflow_backend_app.leasetemplate')),
                ('owner', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='keyflow_backend_app.owner')),
                ('portfolio', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rental_properties', to='keyflow_backend_app.portfolio')),
            ],
            options={
                'db_table': 'rental_properties',
            },
        ),
        migrations.CreateModel(
            name='RentalUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('beds', models.PositiveIntegerField()),
                ('baths', models.PositiveIntegerField()),
                ('size', models.PositiveIntegerField(default=0)),
                ('template_id', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('signed_lease_document_metadata', models.TextField(blank=True, default='[]', null=True)),
                ('lease_terms', models.TextField(blank=True, default='\n[\n    {\n        "name": "rent",\n        "label": "Rent",\n        "value": 1500,\n        "inputType": "number",\n        "description": "How much you are going to charge for rent per period",\n        "type": "lease"\n    },\n    {\n        "name": "rent_frequency",\n        "label": "Rent Frequency",\n        "inputType": "select",\n        "options": [\n            {\n                "value": "day",\n                "label": "Daily"\n            },\n            {\n                "value": "month",\n                "label": "Monthly"\n            },\n            {\n                "value": "week",\n                "label": "Weekly"\n            },\n            {\n                "value": "year",\n                "label": "Yearly"\n            }\n        ],\n        "value": "month",\n        "description": "How often you are going to charge rent. This can be daily, monthly, weekly, or yearly",\n        "type": "lease"\n    },\n    {\n        "name":"rent_collection_day",\n        "label":"Rent Collection Day",\n        "inputType":"select",\n        "options":[\n            {\n            "value":1,\n            "label":"1st"\n            },\n            {\n            "value":2,\n            "label":"2nd"\n            },\n            {\n            "value":3,\n            "label":"3rd"\n            },\n            {\n            "value":4,\n            "label":"4th"\n            },\n            {\n            "value":5,\n            "label":"5th"\n            },\n            {\n            "value":6,\n            "label":"6th"\n            },\n            {\n            "value":7,\n            "label":"7th"\n            },\n            {\n            "value":8,\n            "label":"8th"\n            },\n            {\n            "value":9,\n            "label":"9th"\n            },\n            {\n            "value":10,\n            "label":"10th"\n            },\n            {\n            "value":11,\n            "label":"11th"\n            },\n            {\n            "value":12,\n            "label":"12th"\n            },\n            {\n            "value":13,\n            "label":"13th"\n            },\n            {\n            "value":14,\n            "label":"14th"\n            },\n            {\n            "value":15,\n            "label":"15th"\n            },\n            {\n            "value":16,\n            "label":"16th"\n            },\n            {\n            "value":17,\n            "label":"17th"\n            },\n            {\n            "value":18,\n            "label":"18th"\n            },\n            {\n            "value":19,\n            "label":"19th"\n            },\n            {\n            "value":20,\n            "label":"20th"\n            },\n            {\n            "value":21,\n            "label":"21st"\n            },\n            {\n            "value":22,\n            "label":"22nd"\n            },\n            {\n            "value":23,\n            "label":"23rd"\n            },\n            {\n            "value":24,\n            "label":"24th"\n            },\n            {\n            "value":25,\n            "label":"25th"\n            },\n            {\n            "value":26,\n            "label":"26th"\n            },\n            {\n            "value":27,\n            "label":"27th"\n            },\n            {\n            "value":28,\n            "label":"28th"\n            },\n            {\n            "value":29,\n            "label":"29th"\n            },\n            {\n            "value":30,\n            "label":"30th"\n            },\n            {\n            "value":31,\n            "label":"31st"\n            }\n        ],\n        "value":1,\n        "description":"What day of the month rent is due",\n        "type":"lease"\n    },\n    {\n        "name": "term",\n        "label": "Term",\n        "inputType": "number",\n        "value": 12,\n        "description": "How long the lease is for in the selected rent frequency",\n        "type": "lease"\n    },\n    {\n        "name": "late_fee",\n        "label": "Late Fee",\n        "inputType": "number",\n        "value": 100,\n        "description": "How much you will charge for late rent payments",\n        "type": "lease"\n    },\n    {\n        "name": "security_deposit",\n        "label": "Security Deposit",\n        "inputType": "number",\n        "value": 100,\n        "description": "How much the tenant will pay for a security deposit. This will be returned to them at the end of the lease if all conditions are met",\n        "type": "lease"\n    },\n    {\n        "name": "gas_included",\n        "label": "Include Gas Bill In Rent",\n        "inputType": "switch",\n        "value": true,\n        "description": "Indicates if gas bill is included in the rent",\n        "type": "lease"\n    },\n    {\n        "name": "electricity_included",\n        "label": "Include Electricity Bill In Rent",\n        "inputType": "switch",\n        "value": true,\n        "description": "Indicates if electricity bill is included in the rent",\n        "type": "lease"\n    },\n    {\n        "name": "water_included",\n        "label": "Include Water Bill In Rent",\n        "inputType": "switch",\n        "value": true,\n        "description": "Indicates if water bill is included in the rent",\n        "type": "lease"\n    },\n    {\n        "name": "repairs_included",\n        "label": "Include Repairs In Rent",\n        "inputType": "switch",\n        "value": true,\n        "description": "Indicates if repairs are included in the rent. If not, the tenant will be responsible for all repair bills",\n        "type": "lease"\n    },\n    {\n        "name": "grace_period",\n        "label": "Grace Period",\n        "inputType": "number",\n        "value": 0,\n        "description": "How many days before the first rent payment is due",\n        "type": "lease"\n    },\n    {\n        "name": "lease_cancellation_notice_period",\n        "label": "Lease Cancellation Notice Period",\n        "inputType": "number",\n        "value": 0,\n        "description": "How many months a tenant must wait before the end of the lease to cancel the lease",\n        "type": "lease"\n    },\n    {\n        "name": "lease_cancellation_fee",\n        "label": "Lease Cancellation Fee",\n        "inputType": "number",\n        "value": 0,\n        "description": "How much the tenant must pay to cancel the lease before the end of the lease",\n        "type": "lease"\n    },\n    {\n        "name": "lease_renewal_notice_period",\n        "label": "Lease Renewal Notice Period",\n        "inputType": "number",\n        "value": 0,\n        "description": "How many months before the end of the lease the tenant must notify the owner of their intent to renew the lease",\n        "type": "lease"\n    },\n    {\n        "name": "lease_renewal_fee",\n        "label": "Lease Renewal Fee",\n        "inputType": "number",\n        "value": 0,\n        "description": "How much the tenant must pay to renew the lease",\n        "type": "lease"\n    }\n]\n', null=True)),
                ('additional_charges', models.TextField(blank=True, default='[]', null=True)),
                ('stripe_product_id', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('stripe_price_id', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('is_occupied', models.BooleanField(default=False)),
                ('preferences', models.TextField(blank=True, default='\n[\n    {\n        "type": "unit_preferences",\n        "hidden": false,\n        "label": "Accept Rental Applications",\n        "name": "accept_rental_applications",\n        "inputType": "switch",\n        "value": true,\n        "description": "Indicates if the owner is accepting rental applications for this unit"\n    },\n    {\n        "type": "unit_preferences",\n        "hidden": false,\n        "label": "Acccept Lease Renewals",\n        "name": "accept_lease_renewals",\n        "inputType": "switch",\n        "value": true,\n        "description": "Indicates if the owner is accepting lease renewals for this unit"\n    },\n    {\n        "type": "unit_preferences",\n        "hidden": false,\n        "label": "Accept Lease Cancellations",\n        "name": "accept_lease_cancellations",\n        "inputType": "switch",\n        "value": true,\n        "description": "Indicates if the owner is accepting lease cancellations for this unit"\n    },\n    {\n        "type": "unit_preferences",\n        "hidden": false,\n        "label": "Allow Lease Auto Renewal",\n        "name": "allow_lease_auto_renewal",\n        "inputType": "switch",\n        "value": true,\n        "description": "Indicates if the owner is allowing tenants in this unit to enable auto renewal of their lease"\n    }\n]\n', null=True)),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('updated_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('lease_template', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rental_units', to='keyflow_backend_app.leasetemplate')),
                ('owner', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='keyflow_backend_app.owner')),
                ('rental_property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rental_units', to='keyflow_backend_app.rentalproperty')),
            ],
            options={
                'db_table': 'rental_units',
            },
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_customer_id', models.CharField(blank=True, max_length=255, null=True)),
                ('auto_renew_lease_is_enabled', models.BooleanField(blank=True, default=False, null=True)),
                ('auto_pay_is_enabled', models.BooleanField(blank=True, default=True, null=True)),
                ('date_joined', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('preferences', models.TextField(blank=True, default='\n[\n    {\n        "type": "notifications",\n        "hidden": false,\n        "label": "New Bill Due",\n        "name": "bill_created",\n        "values": [\n            {"name": "push", "value": true, "inputType":"switch", "label": "Push Notifications"},\n            {"name": "email", "value": true, "inputType":"switch", "label": "Email Notifications"}\n        ],\n        "description": "Enable or disable notifications for when a bill is created or you are automatically charged"\n    },\n    {\n        "type": "notifications",\n        "hidden": false,\n        "label": "Lease Cancellation Request Approval",\n        "name": "lease_cancellation_request_approved",\n        "values": [\n            {"name": "push", "value": true, "inputType":"switch", "label": "Push Notifications"},\n            {"name": "email", "value": true, "inputType":"switch", "label": "Email Notifications"}\n        ],\n        "description": "Enable or disable notifications for when a lease cancellation request is approved"\n    },\n    {\n        "type": "notifications",\n        "hidden": false,\n        "label": "Lease Cancellation Request Denial",\n        "name": "lease_cancellation_request_denied",\n        "values": [\n            {"name": "push", "value": true, "inputType":"switch", "label": "Push Notifications"},\n            {"name": "email", "value": true, "inputType":"switch", "label": "Email Notifications"}\n        ],\n        "description": "Enable or disable notifications for when a lease cancellation request is denied"\n    },\n    {\n        "type": "notifications",\n        "hidden": false,\n        "label": "Lease Renewal Request Approval",\n        "name": "lease_renewal_request_approved",\n        "values": [\n            {"name": "push", "value": true, "inputType":"switch", "label": "Push Notifications"},\n            {"name": "email", "value": true,"inputType":"switch", "label": "Email Notifications"}\n        ],\n        "description": "Enable or disable notifications for when a lease renewal request is approved"\n    },\n    {\n        "type": "notifications",\n        "hidden": false,\n        "label": "Lease Renewal Request Rejection",\n        "name": "lease_renewal_request_rejected",\n        "values": [\n            {"name": "push", "value": true, "inputType":"switch", "label": "Push Notifications"},\n            {"name": "email", "value": true, "inputType":"switch", "label": "Email Notifications"}\n        ],\n        "description": "Enable or disable notifications for when a lease renewal request is rejected"\n    },\n    {\n        "type": "notifications",\n        "hidden": false,\n        "label": "Message Received",\n        "name": "message_received",\n        "values": [\n            {"name": "push", "value": true, "inputType":"switch", "label": "Push Notifications"},\n            {"name": "email", "value": true, "inputType":"switch", "label": "Email Notifications"}\n        ],\n        "description": "Enable or disable notifications for when you receive a message"\n    }\n]\n', null=True)),
                ('owner', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='owner_tenant', to='keyflow_backend_app.owner')),
                ('user', models.OneToOneField(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tenants',
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_account_id', models.CharField(blank=True, max_length=255, null=True)),
                ('date_joined', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('user', models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'vendors',
            },
        ),
        migrations.CreateModel(
            name='UploadedFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(max_length=1000, upload_to=keyflow_backend_app.models.uploaded_file.user_directory_path)),
                ('file_key', models.CharField(blank=True, max_length=1000, null=True)),
                ('subfolder', models.CharField(blank=True, max_length=100, null=True)),
                ('uploaded_at', models.DateTimeField(default=datetime.datetime.now)),
                ('file_s3_url', models.URLField(blank=True, max_length=1000, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'uploaded_files',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('type', models.CharField(choices=[('security_deposit', 'Security Deposit'), ('rent_payment', 'Rent Payment'), ('late_fee', 'Late Fee'), ('pet_fee', 'Pet Fee'), ('lease_renewal_fee', 'Lease Renewal Fee'), ('lease_cancellation_fee', 'Lease Cancellation Fee'), ('maintenance_fee', 'Maintenance Fee'), ('vendor_payment', 'Vendor Payment'), ('expense', 'Expense'), ('revenue', 'Revenue')], max_length=50)),
                ('description', models.TextField()),
                ('payment_intent_id', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('payment_method_id', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('timestamp', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('billing_entry', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='keyflow_backend_app.billingentry')),
                ('owner', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='keyflow_backend_app.owner')),
                ('rental_property', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='keyflow_backend_app.rentalproperty')),
                ('rental_unit', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='keyflow_backend_app.rentalunit')),
                ('tenant', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='keyflow_backend_app.tenant')),
                ('user', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'transactions',
            },
        ),
        migrations.CreateModel(
            name='TenantInvite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(default=None, max_length=100)),
                ('last_name', models.CharField(default=None, max_length=100)),
                ('email', models.EmailField(default=None, max_length=100)),
                ('approval_hash', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('last_sent_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='keyflow_backend_app.owner')),
                ('rental_unit', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='keyflow_backend_app.rentalunit', unique=True)),
                ('tenant', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='keyflow_backend_app.tenant')),
            ],
            options={
                'db_table': 'tenant_invites',
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_account_id', models.CharField(blank=True, max_length=255, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('privileges', models.CharField(blank=True, max_length=255, null=True)),
                ('date_joined', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('owner', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='owner_staff', to='keyflow_backend_app.owner')),
                ('user', models.OneToOneField(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'staff',
            },
        ),
        migrations.AddField(
            model_name='rentalunit',
            name='signed_lease_document_file',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rental_units', to='keyflow_backend_app.uploadedfile'),
        ),
        migrations.AddField(
            model_name='rentalunit',
            name='tenant',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tenant_unit', to='keyflow_backend_app.tenant'),
        ),
        migrations.CreateModel(
            name='RentalApplication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('date_of_birth', models.DateField(blank=True, default=None, null=True)),
                ('phone_number', models.CharField(max_length=15)),
                ('desired_move_in_date', models.DateField()),
                ('is_archived', models.BooleanField(default=False)),
                ('is_approved', models.BooleanField(default=False)),
                ('approval_hash', models.CharField(blank=True, default=None, max_length=100, null=True, unique=True)),
                ('other_occupants', models.BooleanField(default=None)),
                ('pets', models.BooleanField(default=None)),
                ('vehicles', models.BooleanField(default=None)),
                ('convicted', models.BooleanField(default=None)),
                ('bankrupcy_filed', models.BooleanField(default=None)),
                ('evicted', models.BooleanField(default=None)),
                ('employment_history', models.TextField(blank=True, null=True)),
                ('residential_history', models.TextField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('updated_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('owner', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='tenant_application_owner', to='keyflow_backend_app.owner')),
                ('tenant', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tenant_application_tenant', to='keyflow_backend_app.tenant')),
                ('unit', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='keyflow_backend_app.rentalunit')),
            ],
            options={
                'db_table': 'rental_applications',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('type', models.CharField(max_length=50)),
                ('resource_url', models.TextField(default=None)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'notifications',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('file', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='keyflow_backend_app.uploadedfile')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'messages',
            },
        ),
        migrations.CreateModel(
            name='MaintenanceRequestEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=225)),
                ('type', models.CharField(max_length=225)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('maintenance_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_request_events', to='keyflow_backend_app.maintenancerequest')),
            ],
            options={
                'db_table': 'maintenance_request_events',
            },
        ),
        migrations.AddField(
            model_name='maintenancerequest',
            name='owner',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='keyflow_backend_app.owner'),
        ),
        migrations.AddField(
            model_name='maintenancerequest',
            name='rental_property',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='keyflow_backend_app.rentalproperty'),
        ),
        migrations.AddField(
            model_name='maintenancerequest',
            name='rental_unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='keyflow_backend_app.rentalunit'),
        ),
        migrations.AddField(
            model_name='maintenancerequest',
            name='tenant',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='tenant_maintenance_request', to='keyflow_backend_app.tenant'),
        ),
        migrations.AddField(
            model_name='leasetemplate',
            name='owner',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='keyflow_backend_app.owner'),
        ),
        migrations.CreateModel(
            name='LeaseRenewalRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('renewal_date', models.DateTimeField(default=None, null=True)),
                ('move_in_date', models.DateTimeField(default=None, null=True)),
                ('request_date', models.DateTimeField()),
                ('request_term', models.IntegerField(default=None, null=True)),
                ('rent_frequency', models.CharField(default=None, max_length=255, null=True)),
                ('status', models.CharField(default='pending', max_length=255)),
                ('comments', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('owner', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='renewal_requests_as_user', to='keyflow_backend_app.owner')),
                ('rental_property', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='keyflow_backend_app.rentalproperty')),
                ('rental_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='keyflow_backend_app.rentalunit')),
                ('tenant', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='renewal_requests_as_tenant', to='keyflow_backend_app.tenant')),
            ],
            options={
                'db_table': 'lease_renewal_requests',
            },
        ),
        migrations.CreateModel(
            name='LeaseCancellationRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_date', models.DateTimeField()),
                ('status', models.CharField(default='pending', max_length=255)),
                ('reason', models.TextField(blank=True, default=None, null=True)),
                ('comments', models.TextField(blank=True, default=None, null=True)),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('updated_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('lease_agreement', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='keyflow_backend_app.leaseagreement')),
                ('owner', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='cancellation_requests_as_user', to='keyflow_backend_app.owner')),
                ('rental_property', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='keyflow_backend_app.rentalproperty')),
                ('rental_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='keyflow_backend_app.rentalunit')),
                ('tenant', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='cancellation_requests_as_tenant', to='keyflow_backend_app.tenant')),
            ],
            options={
                'db_table': 'lease_cancellation_requests',
            },
        ),
        migrations.AddField(
            model_name='leaseagreement',
            name='lease_renewal_request',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='keyflow_backend_app.leaserenewalrequest'),
        ),
        migrations.AddField(
            model_name='leaseagreement',
            name='lease_template',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='keyflow_backend_app.leasetemplate'),
        ),
        migrations.AddField(
            model_name='leaseagreement',
            name='owner',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='owner', to='keyflow_backend_app.owner'),
        ),
        migrations.AddField(
            model_name='leaseagreement',
            name='rental_application',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='keyflow_backend_app.rentalapplication'),
        ),
        migrations.AddField(
            model_name='leaseagreement',
            name='rental_unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='keyflow_backend_app.rentalunit'),
        ),
        migrations.AddField(
            model_name='leaseagreement',
            name='signed_lease_document_file',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lease_agreements', to='keyflow_backend_app.uploadedfile'),
        ),
        migrations.AddField(
            model_name='leaseagreement',
            name='tenant',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lease_agreements', to='keyflow_backend_app.tenant'),
        ),
        migrations.AddField(
            model_name='leaseagreement',
            name='tenant_invite',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='keyflow_backend_app.tenantinvite'),
        ),
        migrations.AddField(
            model_name='billingentry',
            name='owner',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='billing_entries', to='keyflow_backend_app.owner'),
        ),
        migrations.AddField(
            model_name='billingentry',
            name='rental_unit',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='billing_entries', to='keyflow_backend_app.rentalunit'),
        ),
        migrations.AddField(
            model_name='billingentry',
            name='tenant',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='billing_entries', to='keyflow_backend_app.tenant'),
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('body', models.TextField()),
                ('severity', models.CharField(default='info', max_length=255)),
                ('target', models.TextField(default=None)),
                ('start_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('end_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='announcements', to='keyflow_backend_app.owner')),
            ],
            options={
                'db_table': 'announcements',
            },
        ),
        migrations.CreateModel(
            name='AccountActivationToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('token', models.CharField(blank=True, default=None, max_length=100, null=True, unique=True)),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('updated_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('user', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'account_activation_tokens',
            },
        ),
    ]
